package com.cebomberman.game.graphics;

import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 * 
 * @author
 */
public class GameStarter extends javax.swing.JFrame {

	/**
	 * Creates new form GameStarterGui
	 */
	public GameStarter() {
		try {
			// Set System L&F
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (UnsupportedLookAndFeelException e) {
			// handle exception
		} catch (ClassNotFoundException e) {
			// handle exception
		} catch (InstantiationException e) {
			// handle exception
		} catch (IllegalAccessException e) {
			// handle exception
		}
		GameStarterComponents panel = new GameStarterComponents();
		setBounds(0, 0, 680, 330);
		add(panel);
		setVisible(true);
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		menuBar = new javax.swing.JMenuBar();
		file = new javax.swing.JMenu();
		launchGame = new javax.swing.JMenuItem();
		openMap = new javax.swing.JMenuItem();
		exitPartSeperator = new javax.swing.JPopupMenu.Separator();
		closeGameStarter = new javax.swing.JMenuItem();
		exit = new javax.swing.JMenuItem();
		edit = new javax.swing.JMenu();
		cut = new javax.swing.JMenuItem();
		copy = new javax.swing.JMenuItem();
		paste = new javax.swing.JMenuItem();
		Window = new javax.swing.JMenu();
		mapEditor = new javax.swing.JMenuItem();
		highScore = new javax.swing.JMenuItem();
		help = new javax.swing.JMenu();
		helpContents = new javax.swing.JMenuItem();
		about = new javax.swing.JMenuItem();
		license = new javax.swing.JMenuItem();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
		setPreferredSize(new java.awt.Dimension(680, 340));

		file.setText("File");

		launchGame.setText("Launch Game");
		file.add(launchGame);

		openMap.setText("Open Map");
		openMap.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				openMapMousePressed(evt);
			}
		});
		file.add(openMap);
		file.add(exitPartSeperator);

		closeGameStarter.setText("Close Game Starter");
		closeGameStarter.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				closeGameStarterActionPerformed(evt);
			}
		});
		file.add(closeGameStarter);

		exit.setText("Exit");
		exit.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				exitMousePressed(evt);
			}
		});
		file.add(exit);

		menuBar.add(file);

		edit.setText("Edit");

		cut.setText("Cut");
		edit.add(cut);

		copy.setText("Copy");
		edit.add(copy);

		paste.setText("Paste");
		edit.add(paste);

		menuBar.add(edit);

		Window.setText("Window");

		mapEditor.setText("Map Editor");
		Window.add(mapEditor);

		highScore.setText("High Scores");
		highScore.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				highScoreMousePressed(evt);
			}
		});
		Window.add(highScore);

		menuBar.add(Window);

		help.setText("Help");

		helpContents.setText("Help Contents");
		helpContents.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				helpContentsMousePressed(evt);
			}
		});
		help.add(helpContents);

		about.setText("About");
		about.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				aboutMousePressed(evt);
			}
		});
		help.add(about);

		license.setText("License");
		help.add(license);

		menuBar.add(help);

		setJMenuBar(menuBar);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 641,
				Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 311,
				Short.MAX_VALUE));

		pack();
	}// </editor-fold>

	private void openMapMousePressed(java.awt.event.MouseEvent evt) {
		BrowseMap browseMap = new BrowseMap();
		browseMap.setBounds(0, 0, 650, 350);
		browseMap.setVisible(true);
	}

	private void highScoreMousePressed(java.awt.event.MouseEvent evt) {
		HighScores highScore = new HighScores();
		highScore.setBounds(0, 0, 159, 310);
		highScore.setVisible(true);
	}

	private void helpContentsMousePressed(java.awt.event.MouseEvent evt) {
		HelpContents helpContents = new HelpContents();
		help.setBounds(0, 0, 400, 300);
		helpContents.setVisible(true);
	}

	private void aboutMousePressed(java.awt.event.MouseEvent evt) {
		AboutPage aboutPage = new AboutPage();
		aboutPage.setBounds(0, 0, 650, 350);
		aboutPage.setVisible(true);
	}

	private void closeGameStarterActionPerformed(java.awt.event.ActionEvent evt) {
		dispose();
	}

	private void exitMousePressed(java.awt.event.MouseEvent evt) {
		System.exit(0);
	}

	// Variables declaration - do not modify
	private javax.swing.JMenu Window;
	private javax.swing.JMenuItem about;
	private javax.swing.JMenuItem closeGameStarter;
	private javax.swing.JMenuItem copy;
	private javax.swing.JMenuItem cut;
	private javax.swing.JMenu edit;
	private javax.swing.JMenuItem exit;
	private javax.swing.JPopupMenu.Separator exitPartSeperator;
	private javax.swing.JMenu file;
	private javax.swing.JMenu help;
	private javax.swing.JMenuItem helpContents;
	private javax.swing.JMenuItem highScore;
	private javax.swing.JMenuItem launchGame;
	private javax.swing.JMenuItem license;
	private javax.swing.JMenuItem mapEditor;
	private javax.swing.JMenuBar menuBar;
	private javax.swing.JMenuItem openMap;
	private javax.swing.JMenuItem paste;
	// End of variables declaration
}
